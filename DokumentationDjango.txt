-- DJANGO INSTALLATION --
! make sure python and its pip are in windows system variable

pip install django

-- CREATE PROJECT --
django-admin startproject backend
! in this folder you find the manage.py script which starts the server
! as well as the "backend" folder where the python files are stored

-- CREATE HTML-PAGE AND DISPLAY IT --
! create a folder "frontend" in the folder structure where the manage.py
! script and the "backend" folder is stored. In this you can create a html-files
! named index.html e.g.

<html>
  <body>
    <p>Hello World!</p>   
  </body>
</html>

! the backend now needs to know where the frontend is located. In the settings.py
! file in the "backend" folder you find the TEMPLATES entry with an empty 'DIRS': []
! -> in the square brackets add
os.path.join(BASE_DIR, 'frontend')
! now the backend knows where your html templates are located.

! the backend now needs to know how to handle client requests.
! in the "backend" folder create a python file views.py with the content 

from django.shortcuts import render
from django.conf import settings
from django.http import HttpResponse,Http404

def index (request):
	return render(request, 'index.html')
	
! the backend now knows what to response if the index method is called 
! (namely to render index.html).

! the URLs which define which view is loaded are defined in the backends urls.py
! here we first need to import the views folder 
from . import views

! and then add the index url which sends the request to the index method of views.py
url(r'^index/', views.index),

-- RUN SERVER --
! open cmd and navigate to the folder where the manage.py is located. Call
python manage.py runserver
! to start the server and open localhost:8000/index to view the created html page!
! to be able to open the index page without calling /index but only the domain change 
url(r'^index/', views.index),
! to 
url(r'^$', views.index),
! now localhost:8000 will render the index.html page

! this can be shortened with a .bat file like startServer.bat which includes 
start "" http://127.0.0.1:8000/index
python manage.py runserver

-- FILE UPLOAD -- 
! In the index.html file of the frontend, replace the current code with

<html>
  <body>
    <form ref='uploadForm' 
      id='uploadForm' 
      action='http://localhost:8000/upload/' 
      method='post' 
      encType="multipart/form-data">{% csrf_token %}
        <input type="file" name="myFile" /> 
        <input type="hidden" name="_csrf" value="<your_csrf_token>" />
        <input type='submit' value='Upload!' />
    </form>     
  </body>
</html>

! A form can take user input parameters and send a post request to perform something.
! The "action" which should be done is defined in the URL 'http://localhost:8000/upload/'
! which we'll create later. 'encType="multipart/form-data"' defines that the post 
! request will contain data (which should be stored on the server).
! csrf tokens are for security reasons (link). 
! The three input buttons types are:
! file -> button to open explorer to open file
! hidden -> not displayed csrf key sended for security 
! submit -> perform the post request

! to create a valid link for the form we need to insert the URL in the backends urls.py
url(r'^upload/', views.upload  ),

! and create the respective 'upload' methods in the views.py
def upload(request):
	doc_to_save = request.FILES['myFile']
	filename = doc_to_save._get_name()
	fd = open(settings.BASE_DIR+'\\uploads\\'+str(filename),'wb')
        for chunk in doc_to_save.chunks():
            fd.write(chunk)
        fd.close()
	return files(request)

! l2: get the file attached to the request (named 'myFile' in the html code)
! l3: get the name of the file
! l4: (for this line we need to create a new folder called "uploads" in the folder where 
!     the manage.py file is located -> in this folder the uploaded files are stored)
!     In the newly created folder create a new file with the same name as the uploaded 
!     file and open it with write acess
! l5+:write the content of the post request file into the new file and close 





